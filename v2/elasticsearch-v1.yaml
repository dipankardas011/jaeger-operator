# it deploys the jaeger crd
apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: simple-prod
spec:
  strategy: production
  storage:
    type: elasticsearch
    elasticsearch:
      nodeCount: 1 # <1>
      resources: # <3>
        requests:
          cpu: 200m
          memory: 4Gi
        limits:
          memory: 4Gi
      redundancyPolicy: ZeroRedundancy
---


apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    linkerd.io/inject: disabled
    prometheus.io/port: "14269"
    prometheus.io/scrape: "true"
  creationTimestamp: "2024-03-03T16:46:22Z"
  generation: 1
  labels:
    app: jaeger
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: simple-prod
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: simple-prod-collector
    app.kubernetes.io/part-of: jaeger
  name: simple-prod-collector
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: collector
      app.kubernetes.io/instance: simple-prod
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: simple-prod-collector
      app.kubernetes.io/part-of: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        app: jaeger
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: simple-prod
        app.kubernetes.io/managed-by: jaeger-operator
        app.kubernetes.io/name: simple-prod-collector
        app.kubernetes.io/part-of: jaeger
    spec:
      containers:
      - args:
        - --sampling.strategies-file=/etc/jaeger/sampling/sampling.json
        - --es.server-urls=https://elasticsearch.default.svc.cluster.local:9200
        - --es.tls.enabled=true
        - --es.tls.ca=/certs/ca
        - --es.tls.cert=/certs/cert
        - --es.tls.key=/certs/key
        - --es.timeout=15s
        - --es.num-shards=1
        - --es.num-replicas=0
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: :9411
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        image: jaegertracing/jaeger-collector:1.54.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14269
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: jaeger-collector
        ports:
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 14267
          name: c-tchan-trft
          protocol: TCP
        - containerPort: 14268
          name: c-binary-trft
          protocol: TCP
        - containerPort: 14269
          name: admin-http
          protocol: TCP
        - containerPort: 14250
          name: grpc
          protocol: TCP
        - containerPort: 4317
          name: grpc-otlp
          protocol: TCP
        - containerPort: 4318
          name: http-otlp
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 14269
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/jaeger/sampling
          name: simple-prod-sampling-configuration-volume
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: sampling
            path: sampling.json
          name: simple-prod-sampling-configuration
        name: simple-prod-sampling-configuration-volume
      - name: certs
        secret:
          defaultMode: 420
          secretName: simple-prod-jaeger-elasticsearch
---


apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    linkerd.io/inject: disabled
    prometheus.io/port: "16687"
    prometheus.io/scrape: "true"
    sidecar.jaegertracing.io/inject: simple-prod
  labels:
    app: jaeger
    app.kubernetes.io/component: query
    app.kubernetes.io/instance: simple-prod
    app.kubernetes.io/managed-by: jaeger-operator
    app.kubernetes.io/name: simple-prod-query
    app.kubernetes.io/part-of: jaeger
    sidecar.jaegertracing.io/injected: simple-prod
  name: simple-prod-query
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/component: query
      app.kubernetes.io/instance: simple-prod
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: simple-prod-query
      app.kubernetes.io/part-of: jaeger
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
        prometheus.io/port: "16687"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
        sidecar.jaegertracing.io/inject: simple-prod
      creationTimestamp: null
      labels:
        app: jaeger
        app.kubernetes.io/component: query
        app.kubernetes.io/instance: simple-prod
        app.kubernetes.io/managed-by: jaeger-operator
        app.kubernetes.io/name: simple-prod-query
        app.kubernetes.io/part-of: jaeger
    spec:
      containers:
      - args:
        - --query.ui-config=/etc/config/ui.json
        - --es.server-urls=https://elasticsearch.default.svc.cluster.local:9200
        - --es.tls.enabled=true
        - --es.tls.ca=/certs/ca
        - --es.tls.cert=/certs/cert
        - --es.tls.key=/certs/key
        - --es.timeout=15s
        - --es.num-shards=1
        - --es.num-replicas=0
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        - name: METRICS_STORAGE_TYPE
        - name: JAEGER_DISABLED
          value: "false"
        - name: JAEGER_SERVICE_NAME
          value: simple-prod.default
        - name: JAEGER_PROPAGATION
          value: jaeger,b3,w3c
        image: jaegertracing/jaeger-query:1.54.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 16687
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: jaeger-query
        ports:
        - containerPort: 16685
          name: grpc-query
          protocol: TCP
        - containerPort: 16686
          name: query
          protocol: TCP
        - containerPort: 16687
          name: admin-http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 16687
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: simple-prod-ui-configuration-volume
          readOnly: true
        - mountPath: /certs
          name: certs
          readOnly: true
      - args:
        - --agent.tags=cluster=undefined,container.name=jaeger-query,deployment.name=simple-prod-query,host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace=default
        - --reporter.grpc.host-port=dns:///simple-prod-collector-headless.default.svc:14250
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: jaegertracing/jaeger-agent:1.54.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: jaeger-agent
        ports:
        - containerPort: 5775
          name: zk-compact-trft
          protocol: UDP
        - containerPort: 5778
          name: config-rest
          protocol: TCP
        - containerPort: 6831
          name: jg-compact-trft
          protocol: UDP
        - containerPort: 6832
          name: jg-binary-trft
          protocol: UDP
        - containerPort: 14271
          name: admin-http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: ui
            path: ui.json
          name: simple-prod-ui-configuration
        name: simple-prod-ui-configuration-volume
      - name: certs
        secret:
          defaultMode: 420
          secretName: simple-prod-jaeger-elasticsearch
---

